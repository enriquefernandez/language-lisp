name: 'Lisp'
scopeName: 'source.lisp'
fileTypes: [
  'lisp'
  'lsp'
  'cl'
  'l'
  'mud'
  'el'
  'scm'
  'rkt'
]
foldingStartMarker: '\\(\\s*$'
foldingStopMarker: '^\\s*\\)'
patterns: [
  {
    match: '(;).*$\\n?'
    captures:
      1:
        name: 'punctuation.definition.comment.lisp'
    name: 'comment.line.semicolon.lisp'
  }
  {
    match: '(\\b(?i:(defun|labels|defmacro|defstruct|defclass|defmethod|defconstant|defparameter|defvar))\\b)(\\s+)((\\w|\\-|\\!|\\?)*)'
    captures:
      2:
        name: 'storage.type.function-type.lisp'
      4:
        name: 'entity.name.function.lisp'
    name: 'meta.function.lisp'
  }
  {
    match: '(#)(\\w|[\\\\+-=<>\'"&#])+'
    captures:
      1:
        name: 'punctuation.definition.constant.lisp'
    name: 'constant.character.lisp'
  }
  {
    match: '(?:^|\\s|\\()(:|&)([a-zA-Z0-9\\#\\.\\-\\_\\+\\=\\>\\<\\/\\!\\?\\*\\[\\]\\{\\}]+)'
    captures:
      1:
        name: 'punctuation.definition.constant.lisp'
      2:
        name: 'punctuation.definition.constant.lisp'
    name: 'meta.definition.lisp'
  }
  {
    match: '(\\*)(\\S*)(\\*)'
    captures:
      1:
        name: 'punctuation.definition.variable.lisp'
      3:
        name: 'punctuation.definition.variable.lisp'
    name: 'variable.other.global.lisp'
  }
  {
    match: '(\\+)(\\S*)(\\+)'
    captures:
      1:
        name: 'punctuation.definition.constant.lisp'
      3:
        name: 'punctuation.definition.constant.lisp'
    name: 'constant.other.global.lisp'
  }
  {
    match: '\\b(?i:let|let\\*|case|do|dolist|dotimes|loop|if|cond|when|unless)\\b'
    name: 'keyword.control.lisp'
  }
  {
    match: '\\b(?i:eq|eql|equal|neq|and|or|not)\\b'
    name: 'keyword.operator.lisp'
  }
  {
    match: '\\b(?i:t|nil)\\b'
    name: 'constant.language.boolean.nil.lisp'
  }
  {
    match: '\\b(?i:cons|car|cdr|lambda|format|print|setq|setf|quote|eval|append|list|listp|memberp|load|progn|apply|mapcar)\\b'
    name: 'support.function.lisp'
  }
  {
    match: '\\b((([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b'
    name: 'constant.numeric.lisp'
  }
  {
    begin: '"'
    beginCaptures:
      0:
        name: 'punctuation.definition.string.begin.lisp'
    end: '"'
    endCaptures:
      0:
        name: 'punctuation.definition.string.end.lisp'
    name: 'string.quoted.double.lisp'
    patterns: [
      {
        match: '\\\\.'
        name: 'constant.character.escape.lisp'
      }
    ]
  }
  {
    begin: '#\\|'
    beginCaptures:
      0:
        name: 'punctuation.definition.comment.begin.lisp'
    end: '\\|#'
    endCaptures:
      0:
        name: 'punctuation.definition.comment.end.lisp'
    name: 'comment.block.hash.lisp'
  }
]
